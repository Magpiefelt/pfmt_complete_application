services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pfmt-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-pfmt_integrated}
      POSTGRES_USER: ${DB_USER:-pfmt_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-pfmt_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema_complete.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql:ro
      # REMOVED: ./database/fix_uuid_schema.sql (file does not exist)
    ports:
      - "5432:5432"
    networks:
      - pfmt-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-pfmt_user} -d ${DB_NAME:-pfmt_integrated}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pfmt-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      BYPASS_AUTH: ${BYPASS_AUTH:-true}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-pfmt_integrated}
      DB_USER: ${DB_USER:-pfmt_user}
      DB_PASSWORD: ${DB_PASSWORD:-pfmt_password}
      JWT_SECRET: ${JWT_SECRET:-pfmt_integrated_jwt_secret_key_2025}
      SESSION_SECRET: ${SESSION_SECRET:-pfmt_integrated_session_secret_2025}
      CORS_ORIGIN: http://localhost:3000,http://frontend:3000
      PORT: 3002
      UPLOAD_DIR: /app/uploads
      MAX_FILE_SIZE: 10485760
      BCRYPT_ROUNDS: 10
      LOG_LEVEL: info
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "3002:3002"
    networks:
      - pfmt-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3002/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Frontend Web Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pfmt-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://backend:3002/api
      VITE_APP_TITLE: PFMT Integrated
      VITE_APP_VERSION: 1.0.0
    ports:
      - "3000:3000"
    networks:
      - pfmt-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  pfmt-network:
    driver: bridge
    name: pfmt-network

volumes:
  postgres_data:
    name: pfmt-postgres-data
  uploads_data:
    name: pfmt-uploads-data

